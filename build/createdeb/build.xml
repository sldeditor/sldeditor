<?xml version="1.0" ?>
<!--

 Copyright (c) year company/person < user [at] domain . com >

 This file is part of appname.

 appname is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 appname is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with appname. If not, see <http://www.gnu.org/licenses/>.

-->
<project name="sldeditor" basedir="." default="dist"> 

    <!-- Set up properties containing important project directories --> 
    <property name="version" value="0.7.5"/>
    <property name="dist.dir" value="dist"/>
    <property name="libs.dir" value="lib"/>
    <property name="executable" value="sldeditor"/>
    <property name="debian.dir" value="debian"/>
    <property name="docs.dir" value="docs"/>
    <property name="debian.tmp.dir" value="${debian.dir}/tmp"/>
    <property name="debian.bin.dir" value="usr/share/${executable}"/>
    <property name="debian.lib.dir" value="${debian.bin.dir}/lib"/>

    <path id="dist_libraries">
        <fileset dir="${libs.dir}">
            <include name="*.jar"/>
            <exclude name="*-javadoc.jar"/>
            <exclude name="*-sources.jar"/>
        </fileset>
    </path>

    <pathconvert property="" pathsep=" ">
        <path refid="dist_libraries"/>
        <map from="${basedir}" to="."/>
    </pathconvert>

    <pathconvert property="debian.class.path" pathsep=" ">
        <path refid="dist_libraries"/>
        <map from="${basedir}" to="/${debian.bin.dir}"/>
    </pathconvert>

    <pathconvert property="debian.pkg.jars" pathsep="${line.separator}">
        <path refid="dist_libraries"/>
        <mapper type="flatten"/>
        <map from="${basedir}" to=""/>
    </pathconvert>

    <pathconvert property="debian.pkg.jars.dest" pathsep="${line.separator}">
        <path refid="dist_libraries"/>
        <map from="${basedir}/${libs.dir}" to="${debian.lib.dir}"/>
    </pathconvert>

    <target name="print-classpath" description="Show the dependency class path">
        <property name="relpath" value="${project.class.path}" relative="yes" basedir="${basedir}"/>
        <echo>${relpath}</echo>
    </target>

    <target name="clean" description="Remove all generated files">
        <delete dir="${class.root}" />
        <delete dir="${dist.dir}" />
        <delete file="${executable}" />
        <delete file="${executable}-debug" />
        <delete>
            <fileset dir="${basedir}" includes="${executable}-*.tar.bz2" />
            <fileset dir="${basedir}/debian">
                <include name="${executable}.1" />
                <include name="${executable}.install" />
                <include name="${executable}.manifest" />
            </fileset>
        </delete>
        <delete dir="${debian.tmp.dir}" />
        <delete dir="${debian.dir}/${executable}" />
    </target>

    <!-- Create a clean dist directory -->
    <target name="dist" depends="man-page,readme" description="Create a clean dist directory">
        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/${docs.dir}"/>
        <mkdir dir="${dist.dir}/${libs.dir}"/>

        <copy todir="${dist.dir}/${libs.dir}">
            <fileset dir="${libs.dir}">
                <include name="*.jar"/>
                <exclude name="*-javadoc.jar"/>
                <exclude name="*-sources.jar"/>
            </fileset>
        </copy>

 <!--
        <copy file="${docs.dir}/${executable}.1" tofile="${dist.dir}/${docs.dir}/${executable}.1" />
-->
    	<copy file="../../README.md" tofile="${dist.dir}/README.md" />

        <echo file="${dist.dir}/${executable}" append="false">#!/bin/sh
if [ -L "$0" ]; then
    CMD="$(readlink -f "$0")"
else
    CMD="$0"
fi

DIR="$( cd "$( dirname "$CMD" )" ; pwd )"
java -jar $DIR/${executable}-${version}.jar "$$@"</echo>

        <chmod file="${dist.dir}/${executable}" perm="a+x"/>
    </target>

    <target name="package-debian" depends="dist" description="Prepare project for Debian packaging">
        <echo file="debian/${executable}.install" append="false">dist/${executable}-${version}.jar ${debian.bin.dir}
dist/${executable} ${debian.bin.dir}
</echo>
        <echo file="debian/jars" append="false">${debian.pkg.jars}</echo>
        <exec executable="sed" output="debian/${executable}.install" append="true">
            <arg value="s#^#${libs.dir}#;s#$$# ${debian.lib.dir}#" />
            <arg value="${debian.dir}/jars" />
        </exec>

        <delete file="debian/jars" />
        <echo file="debian/${executable}.manpages" append="false">${docs.dir}/${executable}.1</echo>
        <copy file="../../README.md" tofile="debian/${executable}.README.Debian" />
    </target>

	<target name="compile" >
	</target>
	
    <target name="man-page" depends="compile" description="Generate man page">
    </target>

    <target name="readme" depends="compile" description="Generate README">
    </target>
</project>